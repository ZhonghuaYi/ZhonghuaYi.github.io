<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>关于代码块样式异常</title>
    <url>/2019/11/24/%E5%85%B3%E4%BA%8E%E4%BB%A3%E7%A0%81%E5%9D%97%E6%A0%B7%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="关于代码块样式问题"><a href="#关于代码块样式问题" class="headerlink" title="关于代码块样式问题"></a>关于代码块样式问题</h1><p>代码块样式问题已经修复，希望能给您优秀的阅读体验。</p>
<p>如果您对博客的代码块样式或者其它方面有好的建议，您可以发送邮件至<a href="mailto:1257980560@qq.com" target="_blank" rel="noopener">1257980560@qq.com</a>或kaedeaki6@gmail.com，欢迎您的优秀见解。</p>
]]></content>
  </entry>
  <entry>
    <title>Django2.2修改默认数据库为MySQL</title>
    <url>/2019/11/24/Django2.2%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E6%95%B0%E6%8D%AE%E5%BA%93%E4%B8%BAMySQL/</url>
    <content><![CDATA[<p>刚开始接触Django，发现其使用的数据库是SQLlite，但是我的电脑上已经有MySQL环境，于是打算将其换成MySQL环境，但是也因此踩了很多坑。</p>
<a id="more"></a>
<p>首先，需要在Django项目的settings.py文件里，修改DATABASE设置。</p>
<p>修改为：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,</span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'mysite'</span>,  <span class="comment"># 数据库名，先前创建的</span></span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'root'</span>,     <span class="comment"># 用户名，可以自己创建用户</span></span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'******'</span>,  <span class="comment"># 密码</span></span><br><span class="line">        <span class="string">'HOST'</span>: <span class="string">'127.0.0.1'</span>,  <span class="comment"># mysql服务所在的主机ip</span></span><br><span class="line">        <span class="string">'PORT'</span>: <span class="string">'3306'</span>,         <span class="comment"># mysql服务端口</span></span><br><span class="line">        <span class="string">'OPTIONS'</span>: &#123;</span><br><span class="line">            <span class="string">'init_command'</span>: <span class="string">"SET sql_mode='STRICT_TRANS_TABLES'"</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>具体的异常显示为：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.13 or newer is required; you have 0.9.3.</span><br></pre></td></tr></table></figure>

<p>这里提到了一个包：mysqlclient，如果你的电脑环境中没有mysqlclient包，需要添加这个包：</p>
<p>如果电脑不是Windows环境，可以直接通过<code>pip install mysqlclient</code>添加这个包。</p>
<p>如果电脑是Windows环境，使用pip会出现错误，需要使用whl包安装。资源地址为</p>
<p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysqlclient</a> 。在其中找到对应你的python版本和电脑字位的文件，下载。</p>
<p>下载完成后，进入此whl文件的文件夹，打开cmd（可以按住shift键，点击鼠标右键，在打开的菜单中打开cmd），使用<code>pip install [whl文件名+后缀]</code>的形式，安装mysqlclient包。</p>
<p>安装完成后，在Django项目的根目录下，使用命令<code>python manage.py migarate</code>命令。但是还是会有这个错误：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> File "D:\projectTools\anaconda\lib\site-packages\django\db\backends\mysql\base.py", line 36, in &lt;module&gt;</span><br><span class="line">    raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__)</span><br><span class="line">django.core.exceptions.ImproperlyConfigured: mysqlclient 1.3.13 or newer is required; you have 0.9.3.</span><br></pre></td></tr></table></figure>

<p>但是毫无疑问，我的mysqlclient包的版本为1.4.6，已经高于1.3.13版本，按理来说应该不会有这个报错。</p>
<p>先解决这个异常问题：打开产生错误的base.py文件，是有两行这样的代码：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if version &lt; (1, 3, 13):</span><br><span class="line">    raise ImproperlyConfigured('mysqlclient 1.3.13 or newer is required; you have %s.' % Database.__version__)</span><br></pre></td></tr></table></figure>

<p>将这两行代码注释完成后，就不会产生版本错误的警告。（感觉是解决不了问题，就解决提出问题的人）</p>
<p>再次在django项目根目录运行<code>python manage.py migrate</code>命令，会产生另外一个错误：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> File "D:\projectTools\anaconda\lib\site-packages\django\db\backends\mysql\operations.py", line 146, in last_executed_query</span><br><span class="line">    query = query.decode(errors='replace')</span><br><span class="line">AttributeError: 'str' object has no attribute 'decode'</span><br></pre></td></tr></table></figure>

<p>意思是query这个str变量没有decode这个方法，因此需要打开operations.py文件（它与上面打开的base.py在同一目录），在146行处，将<code>decode</code>改为<code>encode</code>，保存退出。</p>
<p>再次运行<code>python manage.py migrate</code>命令，发现命令终于成功运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Running migrations:</span><br><span class="line">  Applying contenttypes.0001_initial... OK</span><br><span class="line">  Applying auth.0001_initial... OK</span><br><span class="line">  Applying admin.0001_initial... OK</span><br><span class="line">  Applying admin.0002_logentry_remove_auto_add... OK</span><br><span class="line">  Applying admin.0003_logentry_add_action_flag_choices... OK</span><br><span class="line">  Applying contenttypes.0002_remove_content_type_name... OK</span><br><span class="line">  Applying auth.0002_alter_permission_name_max_length... OK</span><br><span class="line">  Applying auth.0003_alter_user_email_max_length... OK</span><br><span class="line">  Applying auth.0004_alter_user_username_opts... OK</span><br><span class="line">  Applying auth.0005_alter_user_last_login_null... OK</span><br><span class="line">  Applying auth.0006_require_contenttypes_0002... OK</span><br><span class="line">  Applying auth.0007_alter_validators_add_error_messages... OK</span><br><span class="line">  Applying auth.0008_alter_user_username_max_length... OK</span><br><span class="line">  Applying auth.0009_alter_user_last_name_max_length... OK</span><br><span class="line">  Applying auth.0010_alter_group_name_max_length... OK</span><br><span class="line">  Applying auth.0011_update_proxy_permissions... OK</span><br><span class="line">  Applying sessions.0001_initial... OK</span><br></pre></td></tr></table></figure>

<p>于是数据库就可以成功更改为MySQL。</p>
<p>以上是我参考网上其它开发者的解决办法，最后成功解决的。也有开发者提到，可能是因为我们使用的是pymysql包，它的版本是0.9.3，并且python解析时将其当作mysqlclient环境，直接读取其版本信息，才会导致一直报错，因此将版本检测的代码注释就不会有问题。</p>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Django</tag>
        <tag>配置</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>博客试运行</title>
    <url>/2019/11/21/%E8%AF%95%E8%BF%90%E8%A1%8C/</url>
    <content><![CDATA[<h1 id="凪白枫秋的博客试运行"><a href="#凪白枫秋的博客试运行" class="headerlink" title="凪白枫秋的博客试运行"></a>凪白枫秋的博客试运行</h1><p>这里是凪白枫秋的博客，在2019年11月21日正式开始试运行。</p>
<p>因博主本人第一次使用维护博客，并且水平有限，因此博客的更新可能会较慢，博客的质量也会起伏较大，希望访客理解。</p>
<p>目前，博客对于评论系统暂未开通，原因在于作者还未熟悉评论系统的具体使用，敬请谅解。</p>
<p>此外，需要强调，<strong>这里维护中华人民共和国的合法利益，坚决反对一切企图危害中华人民共和国正当利益的行为。</strong></p>
]]></content>
      <tags>
        <tag>通知</tag>
      </tags>
  </entry>
  <entry>
    <title>关于网站</title>
    <url>/2019/11/20/%E5%85%B3%E4%BA%8E%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h1 id="关于网站"><a href="#关于网站" class="headerlink" title="关于网站"></a>关于网站</h1><p>这里是依靠GitHub以及hexo框架建立的博客网站。在这里，作者会不定期更新一些博客，内容包括但不限于计算机科学的学习、娱乐杂谈、资源分享。</p>
<p>鉴于这是作者仅仅是计算机科学的爱好者，水平较低，因此博文可能并没有太大的价值，也希望访问者可以理解。</p>
<p>如果您对此网站有好的建议，欢迎发送邮件至<a href="mailto:1257980560@qq.com" target="_blank" rel="noopener">1257980560@qq.com</a>或kaedeaki6@gmail.com，我将不胜感激。</p>
<h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>本人来自中华人民共和国，认可中华人民共和国共产党的政治立场，坚决拥护中华人民共和国所拥有的领土主权，对全世界的访客都报以友好的态度。坚决反对任何企图分裂中国，威胁中国国家安全的任何行为。</p>
]]></content>
      <tags>
        <tag>通知</tag>
      </tags>
  </entry>
</search>
